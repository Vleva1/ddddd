from django.db import models
from datetime import datetime

from django.contrib.auth.models import User



article = 'AR'
news = "NW"

OPTIONS = [
    (article, 'статья'),
    (news, "новость")
]



class Author(models.Model):
    name = models.CharField(max_length=50)
    user = models.OneToOneField(User, on_delete = models.CASCADE)
    rating = models.IntegerField(default = 0)

    def update_rating(self):
        self.rating = 0
        for comm in Comment.objects.filter(user = self.user):
            self.rating += comm.rate_comment
        for post in Post.objects.filter(authors = Author.objects.get(user = self.user)):
            self.rating += post.rate_post * 3
            for comm_post in Comment.objects.filter(posts = post):
                self.rating += comm_post.rate_comment
        self.save()



class Category(models.Model):
    name = models.CharField(max_length = 30, unique = True)

class Post(models.Model):
    author = models.ForeignKey(Author, on_delete = models.CASCADE)
    option = models.CharField(max_length = 2,
                              choices = OPTIONS,
                              default = news)
    dt_of_publication = models.DateTimeField(auto_now_add = True)
    title = models.CharField(max_length = 150)
    text = models.CharField(max_length = 10000)
    rate_post = models.IntegerField(default=0)
    category = models.ManyToManyField(Category, through = 'PostCategory')

    @property
    def post_rating(self):
        return self.rate_post

    @post_rating.setter
    def post_rating(self, value):
        if value >= 0 and isinstance(value, int):
            self.rate_post = value
        else:
            self.rate_post = 0
        self.save()
